/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.samplegui;

import com.mongodb.client.*;
import org.bson.Document;
import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoCursor;
import com.mongodb.client.MongoDatabase;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author utentepc
 */
public class WinFirst extends javax.swing.JFrame {

    static final String DB_URL = "jdbc:mysql://127.0.0.1:3306/dbcentromedico";
    static final String USER = "root";
    static final String PASS = "root";
    Connection conn;
    ArrayList<Integer> listIdClienti = new ArrayList<Integer>(); // Lista aggiornata da dbcentromedico per clienti
    ArrayList<Integer> listIdPrestazioni = new ArrayList<Integer>(); // Lista aggiornata da dbcentromedico per prestaziooni
    ArrayList<Integer> listIdPrenotazioni = new ArrayList<>(); // Lista aggiornata da dbcentro v_all
    
    

    /**
     * Creates new form WinFirst
     */
    public WinFirst() {
        initComponents();
        refreshListClienti();
        refreshListPrestazioni();
        refreshTablePrenotazioni();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbTitoloApp = new javax.swing.JLabel();
        txName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        lbShowTX = new javax.swing.JLabel();
        btInsert = new javax.swing.JButton();
        lbLastName = new javax.swing.JLabel();
        txLastName = new javax.swing.JTextField();
        lbBirthDate = new javax.swing.JLabel();
        txBirthYear = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tpShowCustomer = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstClienti = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstPrenotazioni = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btInsertNewReservationActionPerformed = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txReservationDate = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel12 = new javax.swing.JLabel();
        spCosto = new javax.swing.JSpinner();
        jLabel13 = new javax.swing.JLabel();
        spCostoP = new javax.swing.JSpinner();
        jLabel14 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        btInsertPrestazioneActionPerformed = new javax.swing.JButton();
        txPerformance = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbPrenotazioni = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbTitoloApp.setText("WINFIRST");

        txName.setToolTipText("es. Omar");
        txName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txNameActionPerformed(evt);
            }
        });
        txName.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txNamePropertyChange(evt);
            }
        });

        jLabel1.setText("*Inserire nome");

        lbShowTX.setText("nessun dato ancora fornito");

        btInsert.setBackground(new java.awt.Color(0, 51, 204));
        btInsert.setForeground(new java.awt.Color(255, 255, 255));
        btInsert.setText("Insert");
        btInsert.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btInsertFocusGained(evt);
            }
        });
        btInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btInsertActionPerformed(evt);
            }
        });

        lbLastName.setText("*Inserire Cognome");

        txLastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txLastNameActionPerformed(evt);
            }
        });

        lbBirthDate.setText("*Inserire anno di nascita");

        tpShowCustomer.setEditable(false);
        jScrollPane1.setViewportView(tpShowCustomer);

        lstClienti.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstClienti.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstClientiValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(lstClienti);

        lstPrenotazioni.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstPrenotazioni.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstPrenotazioniValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(lstPrenotazioni);

        jLabel2.setText("Lista Clienti :");

        jLabel3.setText("Lista prestazioni :");

        btInsertNewReservationActionPerformed.setBackground(new java.awt.Color(0, 51, 153));
        btInsertNewReservationActionPerformed.setForeground(new java.awt.Color(255, 255, 255));
        btInsertNewReservationActionPerformed.setText("PRENOTA");
        btInsertNewReservationActionPerformed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btInsertNewReservationActionPerformedActionPerformed(evt);
            }
        });

        jLabel6.setText("Inserire data prenotazione :");

        jLabel7.setText("Nome prestazione : ");

        jLabel8.setText("Inserire costo prestazione : ");

        jLabel9.setText(" Conferma prenotazione premendo il tasto OK --> ");
        jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));

        txReservationDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txReservationDateActionPerformed(evt);
            }
        });

        jLabel12.setText("Nuova prenotazione : ");

        jLabel13.setText("Costo prenotazione : ");

        jLabel14.setText("Nuova prestazione : ");

        btInsertPrestazioneActionPerformed.setBackground(new java.awt.Color(0, 51, 153));
        btInsertPrestazioneActionPerformed.setForeground(new java.awt.Color(255, 255, 255));
        btInsertPrestazioneActionPerformed.setText("OK");
        btInsertPrestazioneActionPerformed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btInsertPrestazioneActionPerformedActionPerformed(evt);
            }
        });

        txPerformance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txPerformanceActionPerformed(evt);
            }
        });

        jLabel15.setText(" Conferma prestazione premendo il tasto OK --> ");
        jLabel15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));

        jLabel11.setText("Per inserire un nuovo cliente compilare i campi obbligatori segnati con '*'.");

        jLabel16.setText("Al termine clicca il tasto sottostante 'OK' per confermare.");

        jLabel17.setText("eg. 2024/05/12 13:06:04");

        tbPrenotazioni.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "cognome", "nome", "prestazione", "data", "importo", "pagato"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tbPrenotazioni);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbBirthDate)
                                .addGap(18, 18, 18)
                                .addComponent(txBirthYear, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btInsert))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(400, 400, 400)
                                .addComponent(lbTitoloApp))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbLastName)
                                        .addGap(46, 46, 46)
                                        .addComponent(txLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(46, 46, 46)
                                        .addComponent(txName, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel11)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbShowTX, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 598, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))
                        .addGap(71, 71, 71)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel7))
                                        .addComponent(spCosto, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel12)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel15)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btInsertPrestazioneActionPerformed))
                                        .addComponent(jLabel17)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addComponent(jLabel6)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addComponent(jLabel13)
                                                    .addGap(42, 42, 42)))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(spCostoP, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txReservationDate, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addComponent(btInsertNewReservationActionPerformed))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel2))
                                    .addGap(46, 46, 46)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel14)
                            .addComponent(txPerformance, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbTitoloApp, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(19, 19, 19))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txBirthYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbBirthDate))
                        .addGap(41, 41, 41))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btInsert)
                        .addGap(28, 28, 28)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14)
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txPerformance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spCosto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btInsertPrestazioneActionPerformed)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12)
                        .addGap(4, 4, 4)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txReservationDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(spCostoP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btInsertNewReservationActionPerformed)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38)
                .addComponent(lbShowTX, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btInsertActionPerformed
        // TODO add your handling code here:
        String newClient = "Le credenziali del nuovo cliente sono: \n";
        String firstName = txName.getText();
        String lastName = txLastName.getText();
        int birthDate = Integer.parseInt(txBirthYear.getText());

        Customer cust = new Customer(firstName, lastName, birthDate);

        newClient += cust.toString();
        System.out.println(newClient);
        newClient = tpShowCustomer.getText() + "\n" + newClient;
        tpShowCustomer.setText(newClient);

        // Clean GUI
        txName.setText("");
        txLastName.setText("");
        txBirthYear.setText("");

        // Msg
        lbShowTX.setText("Cliente creato con successo!");
        try {
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
            PreparedStatement stmt = conn.prepareStatement("INSERT INTO t_clienti(nome,cognome,anno)"
                    + "values (?,?,?) ");
            stmt.setString(1, firstName);
            stmt.setString(2, lastName);
            stmt.setInt(3, birthDate);
            int rows = stmt.executeUpdate();
            System.out.println("Rows impacted : " + rows);
            refreshListClienti();
            ResultSet rs = stmt.executeQuery("select * from t_clienti order by id_cliente desc");
            while (rs.next()) {
                System.out.println("ID: " + rs.getInt("id_cliente"));
                System.out.println(", FIRST NAME: " + rs.getString("cognome"));
                System.out.println(", LAST NAME: " + rs.getString("nome"));
                //System.out.println("BIRTHDATE: "+ rs.getInt("anno"));
            }
        } catch (Exception e) {
            System.out.println(e);
        }

        try {
            //creo client connessione
            MongoClient mongo = MongoClients.create("mongodb://localhost:27017");
            //accedo al db
            MongoDatabase db = mongo.getDatabase("dbcentromedico");
            MongoCollection collection = db.getCollection("clienti");
            Document newDoc = new Document();
            newDoc.append("nome", firstName);
            newDoc.append("cognome", lastName);
            newDoc.append("anno", birthDate);

            MongoCursor<Document> cursor = collection.find().iterator();
            while (cursor.hasNext()) {
                Document doc = cursor.next();
                String cog = doc.get("cognome").toString();
                System.out.println(cog);
            }

        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_btInsertActionPerformed

    private void btInsertFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btInsertFocusGained
        // TODO add your handling code here:

    }//GEN-LAST:event_btInsertFocusGained

    private void txNamePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txNamePropertyChange
        // TODO add your handling code here:

        lbShowTX.setText("Inserire nuovo cliente...");
    }//GEN-LAST:event_txNamePropertyChange

    private void txLastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txLastNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txLastNameActionPerformed

    private void lstClientiValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstClientiValueChanged
        // TODO add your handling code here:
        int index = lstClienti.getSelectedIndex();
        String nome = lstClienti.getSelectedValue();
        int idcliente = listIdClienti.get(index);
        lbShowTX.setText("CLIENT_ID: "+ idcliente+"     CLIENT_NAME: "+nome);
        
    }//GEN-LAST:event_lstClientiValueChanged

    private void lstPrenotazioniValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstPrenotazioniValueChanged
        // TODO add your handling code here:
        int index = lstPrenotazioni.getSelectedIndex();
        String nomePrestazione = lstPrenotazioni.getSelectedValue();
        int idprestazione = listIdPrestazioni.get(index);
        lbShowTX.setText("PERFORMANCE_ID : "+ idprestazione+"       PERFORMANCE_NAME: "+nomePrestazione);
        
    }//GEN-LAST:event_lstPrenotazioniValueChanged

    private void btInsertNewReservationActionPerformedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btInsertNewReservationActionPerformedActionPerformed
        // TODO add your handling code here:
        String data = txReservationDate.getText();
        int cost = (Integer) spCostoP.getValue();
        lbShowTX.setText("Prenotazione creata!");
        int idc = listIdClienti.get(lstClienti.getSelectedIndex());
        int idp = listIdPrestazioni.get(lstClienti.getSelectedIndex());
        
        
        try {
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
            PreparedStatement stmt = conn.prepareStatement("insert into t_prenotazioni (id_cliente, id_prestazione, data_prenotazione, importo)" 
                            + "values (?, ?, ?, ?)");
            
            stmt.setInt(1, idc);
            stmt.setInt(2, idp);
            stmt.setString(3, data);
            stmt.setInt(4, cost);
            
            int rows = stmt.executeUpdate();
            System.out.println("Rows impacted: "+rows);
            refreshListPrestazioni();
            }
            catch (Exception e) {
                System.out.println(e.getMessage());      
            }
    }//GEN-LAST:event_btInsertNewReservationActionPerformedActionPerformed

    private void txReservationDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txReservationDateActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_txReservationDateActionPerformed

    private void btInsertPrestazioneActionPerformedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btInsertPrestazioneActionPerformedActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_btInsertPrestazioneActionPerformedActionPerformed

    private void txPerformanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txPerformanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txPerformanceActionPerformed

    private void txNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txNameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WinFirst.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WinFirst.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WinFirst.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WinFirst.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WinFirst().setVisible(true);
            }
        });
    }

    public void refreshListClienti() {
        try {
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
            PreparedStatement stmt = conn.prepareStatement("SELECT id_cliente, concat(cognome, \" \", nome) as nominativo FROM t_clienti order by nominativo;");
            ResultSet rs = stmt.executeQuery();
            DefaultListModel model = new DefaultListModel();
            listIdClienti.clear();
            
            while (rs.next()) {
                model.addElement(rs.getString("nominativo"));
                listIdClienti.add(rs.getInt("id_cliente"));
            }
            lstClienti.setModel(model);
            }
            catch (Exception e) {
                System.out.println(e.getMessage());      
            }
        }
    
    public void refreshListPrestazioni(){
        try {
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
            PreparedStatement stmt = conn.prepareStatement("SELECT id_prestazione, prestazione, costo FROM t_prestazioni order by id_prestazione;");
            ResultSet rs = stmt.executeQuery();
            DefaultListModel model = new DefaultListModel();
            listIdPrestazioni.clear();
            
            while (rs.next()) {
                model.addElement(rs.getString("prestazione") + " ( €" + rs.getFloat("costo")+" )");
                listIdPrestazioni.add(rs.getInt("id_prestazione"));
            }
            lstPrenotazioni.setModel(model);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
    
    public void refreshTablePrenotazioni(){
        try {
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
            PreparedStatement stmt = conn.prepareStatement("SELECT cognome, nome, prestazione, data_prenotazione, importo, pagato FROM v_all order by data_prenotazione desc;");
            ResultSet rs = stmt.executeQuery();
            DefaultTableModel model = (DefaultTableModel) tbPrenotazioni.getModel();
            
            
            while (rs.next()) {
                String c = rs.getString("cognome");
                String n = rs.getString("nome");
                String pr = rs.getString("prestazione");
                String dt = rs.getString("data_prenotazione");
                int im = rs.getInt("importo");
                int pag = rs.getInt("pagato");
                Object[] obj = new Object[]{
                    c,n,pr,dt,im,pag
                };
                model.addRow(obj);
            }
            tbPrenotazioni.setModel(model);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btInsert;
    private javax.swing.JButton btInsertNewReservationActionPerformed;
    private javax.swing.JButton btInsertPrestazioneActionPerformed;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel lbBirthDate;
    private javax.swing.JLabel lbLastName;
    private javax.swing.JLabel lbShowTX;
    private javax.swing.JLabel lbTitoloApp;
    private javax.swing.JList<String> lstClienti;
    private javax.swing.JList<String> lstPrenotazioni;
    private javax.swing.JSpinner spCosto;
    private javax.swing.JSpinner spCostoP;
    private javax.swing.JTable tbPrenotazioni;
    private javax.swing.JTextPane tpShowCustomer;
    private javax.swing.JTextField txBirthYear;
    private javax.swing.JTextField txLastName;
    private javax.swing.JTextField txName;
    private javax.swing.JTextField txPerformance;
    private javax.swing.JTextField txReservationDate;
    // End of variables declaration//GEN-END:variables
}
